6 - Edmonds-Karp
Implemente o Algoritmo de Edmonds-Karp para encontrar um fluxo mÃ¡ximo em uma rede de fluxo (D, c, s, t).
CritÃ©rios importantes
Independente dos resultados dos testes, o nÃ£o cumprimento dos critÃ©rios abaixo implicarÃ¡ em nota zero para esta atividade. Qualquer dÃºvida, entre em contato.
As Ãºnicas estruturas de dados que vocÃª poderÃ¡ usar da biblioteca padrÃ£o sÃ£o: vetores/matrizes (estÃ¡ticos e/ou dinÃ¢micos), listas, pilhas, strings.
ğŸš¨ De agora em diante, hashs/dicionÃ¡rios/maps estÃ£o proibidos (a nÃ£o ser que liberados explicitamente)
numpy, do Python, nÃ£o Ã© uma biblioteca padrÃ£o e, portanto, nÃ£o pode ser usada.
Se vocÃª precisar, vocÃª pode usar uma rotina de ordenaÃ§Ã£o fornecida pela sua linguagem.
Quem fizer em Java, deve usar a classe BufferedReader para fazer a leitura da entrada (ela Ã© bem mais rÃ¡pida do que a Scanner)
Entrada
A primeira linha da entrada consiste de um nÃºmero n (1 <= n <= 100000) que denota o nÃºmero de vÃ©rtices do digrafo D e a segunda, de um nÃºmero inteiro m (0 <= m <= n (n - 1)) que presenta o nÃºmero total de arcos em D. VocÃª pode assumir que D nÃ£o contÃ©m 2-ciclos. A terceira linha consiste de um nÃºmero inteiro s e a quarta, de um inteiro t. Esses inteiros representam dois vÃ©rtices de D e vocÃª pode assumir que s != t. Cada uma das prÃ³ximas m linhas consiste de trÃªs nÃºmeros inteiros x y w, onde 0 <= x, y < n e 0 <= w <= 999, representando que D contÃ©m um arco xy tal que c(xy) = w.
SaÃ­da
A primeira linha da sua saÃ­da deve consistir de um inteiro F que representa o valor do fluxo mÃ¡ximo em (D, c, s, t). VocÃª deve usar as prÃ³ximas m linhas para descrever um fluxo mÃ¡ximo f. Cada uma dessas linhas deve consistir de trÃªs nÃºmero inteiros x y k representando que f(xy) = k, ou seja, que o fluxo f atravÃ©s no arco xy Ã© igual a k.
Exemplos
Teste 01
Entrada:
8
11
1
7
0 4 54
1 3 17
1 4 96
1 7 8
2 7 52
3 2 73
3 6 53
4 7 30
5 1 52
5 4 75
7 5 79
SaÃ­da:
55
0 4 0
1 3 17
1 4 30
1 7 8
2 7 17
3 2 17
3 6 0
4 7 30
5 1 0
5 4 0
7 5 0
Teste 02
Entrada:
10
14
8
7
0 4 69
0 8 59
1 0 39
1 2 2
1 9 52
2 6 17
2 9 60
3 7 52
5 3 61
6 9 60
7 1 65
7 5 66
8 6 75
9 3 68
SaÃ­da:
52
0 4 0
0 8 0
1 0 0
1 2 0
1 9 0
2 6 0
2 9 0
3 7 52
5 3 0
6 9 52
7 1 0
7 5 0
8 6 52
9 3 52
ObservaÃ§Ãµes
VocÃª deve incluir, no inÃ­cio do seu programa, uma breve descriÃ§Ã£o dos objetivos do programa, da entrada e da saÃ­da, alÃ©m do seu nome e do seu RA.
Indente corretamente o seu cÃ³digo e inclua comentÃ¡rios no decorrer do programa seu.
Linguagens aceitas: c, c++, python, java
