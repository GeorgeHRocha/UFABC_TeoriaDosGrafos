5 - Contato
Muitos anos ap√≥s a constru√ß√£o da M√°quina e do primeiro contato com vida inteligente extraterrestre realizado pela Dra. Arroway, a humanidade j√° se encontra totalmente integrada ao universo, realizando com√©rcio com as mais distintas civiliza√ß√µes. Podemos visitar sistemas solares a milh√µes de anos luz, gastando n√£o mais do que se levaria em uma viagem de avi√£o entre o Rio de Janeiro e S√£o Paulo no s√©culo XXI, gra√ßas √† estrutura de buracos de minhoca deixada pelos Arquitetos, como s√£o chamados os criadores dessa estrutura.

Um buraco de minhoca √© uma dobra no tecido do espa√ßo tempo que gera uma passagem bidirecional entre dois pontos no universo, criando um atalho entre eles, o que na pr√°tica nos permite viajar acima da velocidade da luz. O acesso a um desses buracos de minhoca geralmente fica pr√≥ximo de um grande buraco negro, que, geralmente, tamb√©m possui acesso a diversos outros buracos de minhoca. Isso cria uma esp√©cie de um grande metr√¥ interestelar, onde as esta√ß√µes s√£o esses buracos negros em diferentes sistemas solares.
Ningu√©m no universo sabe quem s√£o os Arquitetos, o que aconteceu com eles, onde eles est√£o, ou como eles constru√≠ram os buracos de minhoca. Se voc√™ estiver interessado em saber um pouco mais sobre como se decorreu esse primeiro contado da humanidade com outras civiliza√ß√µes inteligentes do universo, recomendamos o livro Contato, do historiador Carl Sagan (tamb√©m fizeram um document√°rio, de mesmo nome).
No in√≠cio, navegar pelos buracos de minhoca deixados pelos Arquitetos era como navegar em uma caravela no s√©culo XVI: uma viagem rumo ao desconhecido e com um sistema de navega√ß√£o prec√°rio. Jornada essa da qual muitos, infelizmente, n√£o retornaram. Mas hoje os tempos s√£o outros. A nossa cartografia interestelar est√° bem desenvolvida e conhecemos detalhadamente essa rede de buracos de minhoca, que foi mapeada por desbravadores gal√°ticos destemidos.
Embora a grande maioria das viagens por essa rede sejam operadas comercialmente, por grande naves de passageiros ou de carga, come√ßam a surgir iniciativas na navega√ß√£o civil. A Tesla √© uma das empresas que est√° determinada a desenvolver um carro interestelar. Para isso, ela precisa que voc√™, lend√°rio aluno de Teoria dos Grafos do Prof. Maycon (ainda bem que eles descobriram o segredo da longevidade em 2024!), desenvolva o programa do UPS (Universal Positional System) ‚Äì O GPS do universo.
O programa do UPS que voc√™ deve escrever deve ser capaz de computar uma rota entre um sistema solar de origem e um de destino que consuma a menor quantidade de energia poss√≠vel.
Crit√©rios importantes
Independente dos resultados dos testes, o n√£o cumprimento dos crit√©rios abaixo implicar√° em nota zero para esta atividade. Qualquer d√∫vida, entre em contato.
As √∫nicas estruturas de dados que voc√™ poder√° usar da biblioteca padr√£o s√£o: vetores/matrizes (est√°ticos e/ou din√¢micos), listas, pilhas, strings.
üö® De agora em diante, hashs/dicion√°rios/maps est√£o proibidos (a n√£o ser que liberados explicitamente)
numpy, do Python, n√£o √© uma biblioteca padr√£o e, portanto, n√£o pode ser usada.
Se voc√™ precisar, voc√™ pode usar uma rotina de ordena√ß√£o fornecida pela sua linguagem.
Voc√™ deve resolver este problema usando o Algoritmo de Dijkstra cuja fila de prioridades deve ser implementada por voc√™ como uma Heap Bin√°ria.
Entrada
A primeira linha de entrada consiste de uma sequ√™ncia de caracteres -, com no m√°ximo 80 caracteres e sem espa√ßos entre eles. A segunda linha da entrada consiste na frase SOLAR SYSTEMS: n, onde n √© um n√∫mero inteiro, 1 <= n <= 100000, que representa o n√∫mero total de sistemas solares cobertos pelo sistema de navega√ß√£o. A terceira linha consiste na frase WORMHOLES: m, onde 0 <= m <= n (n - 1), que presenta o n√∫mero total de buracos de minhoca conectando sistemas solares. A quarta linha consiste na frase ORIGIN: x, 0 <= x <= n - 1, que representa o sistema solar de origem. A quinta linha consiste na frase DESTINATION: y, 0 <= y <= n - 1, que representa o sistema solar de destino. A sexta linha consiste de uma sequ√™ncia de caracteres - nos moldes da primeira linha. Cada uma das pr√≥ximas m linhas consiste de tr√™s n√∫meros x y w, onde x e y s√£o inteiros tais que 0 <= x, y < n e w √© um n√∫mero real tal que 0 <= w <= 999, representando que existe um buraco de minhoca conectando o sistema solar x ao sistema solar y e que custo energ√©tico de atravessar tal buraco de minhoca √© de w googol Joules/metro.
Sa√≠da
O seu programa deve calcular uma rota, usando a menor quantidade e energia poss√≠vel, que v√° do sistema solar x ao y. Caso essa rota n√£o exista, o seu programa deve imprimir uma √∫nica linha com a frase NO ROUTE FOUND!. Caso exista, ent√£o a primeira linha da sa√≠da do seu programa deve consistir da frase TOTAL JUMPS: k, onde k √© um n√∫mero inteiro positivo que representa o n√∫mero de sistemas solares percorridos ao longo da rota. A segunda linha deve consistir da frase ENERGY REQUIRED: e, onde e √© um n√∫mero real com quatro casas decimais de precis√£o. A terceira linha deve consistir da frase ROUTE:, e, cada uma das pr√≥ximas k linhas deve consistir da frase i: j, onde j √© o i-√©simo sistema solar visitado ao longo da rota.
Exemplos
Teste 01
Entrada:
--------------------
SOLAR SYSTEMS: 6
WORMHOLES: 3
ORIGIN: 3
DESTINATION: 0
--------------------
0 2 16.6527
1 3 0.2998
1 4 924.0068
Sa√≠da:
NO ROUTE FOUND!
Teste 02
Entrada:
--------------------
SOLAR SYSTEMS: 8
WORMHOLES: 9
ORIGIN: 4
DESTINATION: 2
--------------------
0 2 753.7072
0 4 97.3479
0 5 0.9588
0 6 2.4305
0 7 836.7662
1 2 9.8862
1 7 97.6411
2 3 47.0181
5 7 523.9485
Sa√≠da:
TOTAL JUMPS: 6
ENERGY REQUIRED: 729.7825
ROUTE:
0: 4
1: 0
2: 5
3: 7
4: 1
5: 2
Teste 03
Entrada:
--------------------
SOLAR SYSTEMS: 6
WORMHOLES: 6
ORIGIN: 5
DESTINATION: 0
--------------------
0 2 67.7132
0 4 2.7441
1 4 0.8613
1 5 9.1149
2 3 4.5596
3 5 0.4337

Sa√≠da:
TOTAL JUMPS: 4
ENERGY REQUIRED: 12.7203
ROUTE:
0: 5
1: 1
2: 4
3: 0
Observa√ß√µes
Voc√™ deve incluir, no in√≠cio do seu programa, uma breve descri√ß√£o dos objetivos do programa, da entrada e da sa√≠da, al√©m do seu nome e do seu RA.
Indente corretamente o seu c√≥digo e inclua coment√°rios no decorrer do programa seu.
Linguagens aceitas: c, c++, python, java
